{"ast":null,"code":"var _jsxFileName = \"/Users/ishahaiderr/Desktop/Archive/src/Adding.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Adding(_ref) {\n  _s();\n  let {\n    notes,\n    onAddNote,\n    activeNote,\n    setActiveNote,\n    noteS,\n    lestS,\n    conS\n  } = _ref;\n  //use valueActive to loop through.... or that is what activeNote is anywyas but try\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const getNoteData = note => {\n    const data = localStorage.getItem(note.id);\n    if (data) {\n      const parsedData = JSON.parse(data);\n      setTitle(parsedData.title);\n      body(parsedData.body);\n    }\n    setTitle('Title');\n    setBody('Content not found');\n  }; // right it should just automatically be updated...? \n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"intro\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onAddNote,\n          className: \"adding\",\n          id: \"add\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-sidebar-notes\",\n        children: notes.map(note => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `app-sidebar-note ${note.id === activeNote ? \"active\" : \"\"}`,\n            onClick: () => setActiveNote(note.id),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sidebar-note-title\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: lestS\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"note-meta\",\n                children: note.lastModified\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              dangerouslySetInnerHTML: {\n                __html: conS\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this)]\n          }, note.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n}\n_s(Adding, \"qwG1af4LOHAgcSQ+L8KuMt9FIzc=\");\n_c = Adding;\nexport default Adding;\nvar _c;\n$RefreshReg$(_c, \"Adding\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Adding","_ref","_s","notes","onAddNote","activeNote","setActiveNote","noteS","lestS","conS","title","setTitle","body","setBody","getNoteData","note","data","localStorage","getItem","id","parsedData","JSON","parse","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","lastModified","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["/Users/ishahaiderr/Desktop/Archive/src/Adding.js"],"sourcesContent":["import {useState} from \"react\"; \nfunction Adding({ notes, onAddNote, activeNote, setActiveNote, noteS, lestS, conS }){\n   //use valueActive to loop through.... or that is what activeNote is anywyas but try\n  const [title, setTitle] = useState(''); \n  const [body, setBody] = useState(''); \n  const getNoteData = (note) => {\n    const data = localStorage.getItem(note.id);\n    if (data) {\n      const parsedData = JSON.parse(data);\n      setTitle(parsedData.title);\n      body(parsedData.body);\n    }\n    setTitle('Title'); \n    setBody('Content not found'); \n  } // right it should just automatically be updated...? \n\n  return (\n        <><div className=\"app-sidebar\">\n        <div className=\"intro\">\n          <h1>Notes</h1>\n          <button onClick={onAddNote} className='adding' id='add'>&#43;</button>\n        </div>\n        <div className=\"app-sidebar-notes\">\n\n        {notes.map((note) => {\n          return (\n            <div\n              key={note.id}\n              className={`app-sidebar-note ${note.id === activeNote ? \"active\" : \"\"}`} onClick={() => setActiveNote(note.id)}>\n              <div className=\"sidebar-note-title\">\n                <strong>{lestS}</strong>\n                <small className=\"note-meta\">{note.lastModified}</small>\n              </div>\n              <p dangerouslySetInnerHTML={{ __html: conS }}></p>\n            </div>\n          );\n        })}\n\n        </div>\n      </div>\n        </>\n    ); \n}\nexport default Adding; "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}